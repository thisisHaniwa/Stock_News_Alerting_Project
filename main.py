import requests
from twilio.rest import Client

# these are acquired from my twilio account
auth_token = "63b3c1db5660fdf3f619ad585b7eaff8"
account_sid = "AC6ede60e63dd72fd40f10ce3059508a74"


#For STOCK_NAME any stock name can be passed as defined by the stock market
# for this program I will demo this program using the TSLA stock(Tesla stock)
STOCK_NAME = "TSLA"
#COMPANY_NAME will be passed in the NEWS API to retrieve articles related to the company name
COMPANY_NAME = "Tesla Inc"

#below are the api endpoints and keys, retrieved from their respective api documentation
STOCK_ENDPOINT = "https://www.alphavantage.co/query"
STOCK_API_KEY = "7HU1QYC7MS8QCTST"
NEWS_ENDPOINT = "https://newsapi.org/v2/everything"
NEWS_API_KEY = "a07573225300443397c03de1007e5a8c"

#parameters as specified the APIs documentation
STOCK_PARAMETER = {
    'function': 'TIME_SERIES_DAILY',
    'symbol': STOCK_NAME,
    'apikey': STOCK_API_KEY,
}

NEWS_PARAMETER = {
    'q': COMPANY_NAME,
    'apiKey': NEWS_API_KEY,

}

#First get the data from the stock API
response = requests.get(url=STOCK_ENDPOINT, params=STOCK_PARAMETER)
response.raise_for_status()
#stock_data gets the daily stock data, which is a dictionary of the daily stock data
#with the keys being the date and value being a dictionary of the stock prices @ open, high, low, close and volume
stock_data = response.json()['Time Series (Daily)']

#Stock value gets the values of the stock_data dictionary, by using a list comprehension
stock_values = [values for (date, values) in stock_data.items()]

#We are interested in the close price of the stock, we will look at yesterday's close price and that of the previous day
close_yesterday = stock_values[0]['4. close']
close_previous_day = stock_values[1]['4. close']
#Get the difference between the two closing stock prices
difference = float(close_yesterday) - float(close_previous_day)

up_or_down = ""
if difference >= 0:
    up_or_down = "ðŸ”º"
else:
    up_or_down = "ðŸ”»"
#Percentage of the difference
percentage = (abs(difference)/float(close_yesterday)) * 100

#
#Whenever there's a large fluctuation(5%) in the stock price, we want to send the user the difference percentage the of stock
#and the top 3 articles of the company of that stock, which might provide reason for change in stock
#Use the NEWS API to get articles
if percentage > 5:

    response = requests.get(url=NEWS_ENDPOINT, params=NEWS_PARAMETER)
    response.raise_for_status()
    #slice the news_data to get the 3 top articles
    news_data = response.json()['articles'][:3]

    #get the title and the description(as a tuple) of the article in news_data using list comprehension
    headlines = [(title['title'], title['description']) for title in news_data]

    #Store all the titles of the articles in headlines into a list
    Headline = [headline[0] for headline in headlines]

    #Store all the descriptions of the articles into a list
    Brief = [description[1] for description in headlines]

    #Use twilio to send the top 3 articles(news) of the company via SMS
    #for this demo I'll be using my phone number to receive the SMS
    #The SMS will be sent from a number generated by Twilio, acquired when signing up.
    for index in range(0, len(Brief)):
        #create a client object as per the Twilio documentation
        client = Client(account_sid, auth_token)
        message = client.messages \
            .create(
                body=f"{STOCK_NAME}: {up_or_down}{round(percentage)}% \nHeadline: {Headline[index]}\n\nBrief: {Brief[index]}",
                from_='+15706725892',
                to='+27724664743',
        )
        #this line prints the status of the message, returns whether the message was delivered successfully(queued)
        print(message.status)


